'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _DatePicker = require('../DatePicker.css');

var _DatePicker2 = _interopRequireDefault(_DatePicker);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Created by able on 2017/1/5 0005.
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */


var DatePickerYear = function (_Component) {
    _inherits(DatePickerYear, _Component);

    function DatePickerYear() {
        _classCallCheck(this, DatePickerYear);

        return _possibleConstructorReturn(this, (DatePickerYear.__proto__ || Object.getPrototypeOf(DatePickerYear)).apply(this, arguments));
    }

    _createClass(DatePickerYear, [{
        key: 'render',
        value: function render() {
            return _react2.default.createElement(
                'div',
                { className: _DatePicker2.default['datepicker__year'] },
                createYearOptions(this.props)
            );
        }
    }, {
        key: 'componentDidMount',
        value: function componentDidMount() {
            this.scrollToSelectedYear();
        }
    }, {
        key: 'scrollToSelectedYear',
        value: function scrollToSelectedYear() {
            var selectedYear = this.refs['selectedYear'];
            var container = selectedYear.parentNode;
            container.scrollTop = selectedYear.offsetTop + selectedYear.clientHeight / 2 - container.clientHeight / 2;
        }
    }]);

    return DatePickerYear;
}(_react.Component);

exports.default = DatePickerYear;

function createYearOptions(props) {
    var onSelectYear = props.onSelectYear;
    var _props$conf = props.conf;
    var maxYear = _props$conf.maxYear;
    var minYear = _props$conf.minYear;
    var selectedYear = _props$conf.selectedYear;

    var years = [];

    var _loop = function _loop(year) {
        var opt = year === selectedYear ? _react2.default.createElement(
            'a',
            { name: year, key: year, className: _DatePicker2.default["year__option--selected"], ref: 'selectedYear' },
            year
        ) : _react2.default.createElement(
            'a',
            { name: year, key: year, onClick: function onClick(e) {
                    return onSelectYear(year);
                }, className: _DatePicker2.default["year__option"] },
            year
        );
        years.push(opt);
    };

    for (var year = minYear; year <= maxYear; year++) {
        _loop(year);
    }
    return years;
}