'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _Select = require('../Input/Select.js');

var _Select2 = _interopRequireDefault(_Select);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var PageSizeSelector = function (_Component) {
    _inherits(PageSizeSelector, _Component);

    function PageSizeSelector(props) {
        _classCallCheck(this, PageSizeSelector);

        var _this = _possibleConstructorReturn(this, (PageSizeSelector.__proto__ || Object.getPrototypeOf(PageSizeSelector)).call(this, props));

        _this.state = {
            defaultValue: props.defaultValue
        };
        return _this;
    }

    _createClass(PageSizeSelector, [{
        key: 'render',
        value: function render() {
            return _react2.default.createElement(_Select2.default, { ref: 'selectBox',
                defaultValue: this.state.defaultValue,
                className: 'pagination__select',
                options: this.props.pageSizeArr,
                onChange: this.handleSize.bind(this) });
        }

        // 修改pageSize

    }, {
        key: 'handleSize',
        value: function handleSize() {
            if (this.props.changeHandle) {
                this.props.changeHandle();
            }
        }
    }, {
        key: 'componentWillReceiveProps',
        value: function componentWillReceiveProps(nextProps) {
            if (nextProps.defaultValue) {
                this.setState({
                    defaultValue: nextProps.defaultValue
                });
            }
        }
    }, {
        key: 'getValue',
        value: function getValue() {
            return this.refs.selectBox.getValue();
        }
    }]);

    return PageSizeSelector;
}(_react.Component);

exports.default = PageSizeSelector;