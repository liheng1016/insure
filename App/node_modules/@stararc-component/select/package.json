{
  "_args": [
    [
      {
        "raw": "@stararc-component/select",
        "scope": "@stararc-component",
        "escapedName": "@stararc-component%2fselect",
        "name": "@stararc-component/select",
        "rawSpec": "",
        "spec": "latest",
        "type": "tag"
      },
      "E:\\phpEvent\\www\\react-redux\\pro.insur\\App"
    ]
  ],
  "_from": "@stararc-component/select@latest",
  "_id": "@stararc-component/select@1.0.7",
  "_inCache": true,
  "_location": "/@stararc-component/select",
  "_nodeVersion": "4.4.3",
  "_npmUser": {},
  "_npmVersion": "4.4.4",
  "_phantomChildren": {
    "babel-code-frame": "6.22.0",
    "big.js": "3.1.3",
    "cssesc": "0.1.0",
    "cssnano": "3.10.0",
    "emojis-list": "2.1.0",
    "fastparse": "1.1.1",
    "json5": "0.5.1",
    "object-assign": "4.1.1",
    "postcss": "5.2.16",
    "postcss-modules-extract-imports": "1.0.1",
    "postcss-modules-local-by-default": "1.1.1",
    "postcss-modules-scope": "1.0.2",
    "postcss-modules-values": "1.2.2",
    "regenerate": "1.3.2",
    "regjsgen": "0.2.0",
    "regjsparser": "0.1.5",
    "source-list-map": "0.1.8"
  },
  "_requested": {
    "raw": "@stararc-component/select",
    "scope": "@stararc-component",
    "escapedName": "@stararc-component%2fselect",
    "name": "@stararc-component/select",
    "rawSpec": "",
    "spec": "latest",
    "type": "tag"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "http://192.168.1.200:4873/@stararc-component%2fselect/-/select-1.0.7.tgz",
  "_shasum": "593361af80d84d3629ab958258494eaeb9b8be16",
  "_shrinkwrap": null,
  "_spec": "@stararc-component/select",
  "_where": "E:\\phpEvent\\www\\react-redux\\pro.insur\\App",
  "author": {
    "name": "liheng"
  },
  "dependencies": {
    "babel-core": "^6.9.0",
    "babel-loader": "^6.4.1",
    "babel-plugin-transform-runtime": "^6.9.0",
    "css-loader": "^0.28.0",
    "react": "^15.4.2",
    "webpack": "^1.13.0"
  },
  "description": "select",
  "devDependencies": {},
  "dist": {
    "shasum": "593361af80d84d3629ab958258494eaeb9b8be16",
    "tarball": "http://192.168.1.200:4873/@stararc-component%2fselect/-/select-1.0.7.tgz"
  },
  "keywords": [
    "select"
  ],
  "license": "ISC",
  "main": "index.js",
  "name": "@stararc-component/select",
  "optionalDependencies": {},
  "readme": "##select\r\n>Des  Select下拉框选择组件\r\n\r\n```\r\nimport React, {Component} from 'react';\r\nimport style from './index.css';\r\n\r\nexport default class Select extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {value: props.defaultValue || ''};\r\n    }\r\n\r\n    render() {\r\n        let {className=\"select\", options=[]} = this.props;\r\n\r\n        let opts = options.map(function (v, index) {\r\n            return (<option key={index} value={v.id}>{v.name}</option>)\r\n        });\r\n        return (\r\n            <select value={this.state.value}\r\n                    className={style[className]}\r\n                    onChange={ e => this.changeHandle(e) }\r\n                    onFocus={e => this.focusHandle(e)}\r\n                    onBlur={e => this.blurHandle(e)}>\r\n                <option value=\"\">全部</option>\r\n                {this.props.children}\r\n                {opts}\r\n            </select>\r\n        )\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        if ((nextProps.defaultValue != null) && (this.props.defaultValue !== nextProps.defaultValue)) {\r\n            this.setState({value: nextProps.defaultValue});\r\n        }\r\n    }\r\n\r\n    focusHandle(e) {\r\n        this.props.focusEvent && this.props.focusEvent()\r\n    }\r\n\r\n    blurHandle(e) {\r\n        this.props.blurEvent && this.props.blurEvent()\r\n    }\r\n\r\n    changeHandle(e) {\r\n        let currentValue = e.target.value;\r\n        let {onChange}  = this.props;\r\n        this.setState({value: currentValue}, function () {\r\n            onChange && onChange(currentValue);\r\n        })\r\n    }\r\n\r\n    getValue() {\r\n        return this.state.value;\r\n    }\r\n\r\n    // 返回的是选中的option的key value值（对象）\r\n    getAllValue() {\r\n        let options = this.props.options || [],\r\n            currentValue = this.state.value,\r\n            aimValue = {id:'',name:''};\r\n\r\n        for (let i = 0; i < options.length; i++) {\r\n            if (options[i].id == currentValue) {\r\n                aimValue = options[i];\r\n            }\r\n        }\r\n\r\n        return aimValue;\r\n    }\r\n}\r\n```\r\n\r\n## params \r\n\r\n`options`   \t\t下拉框的选项,必须是一个数组（[{id:'',name:''}]）\r\n\r\n`defaultValue`\t\t下拉框的默认值\t\t\r\n\r\n`onChange`\t\t\t下拉框改变触发的事件\r\n\r\n`blurEvent`\t\t\t下拉框失焦事件\r\n\r\n`focusEvent`\t\t下拉框的获取焦点事件\r\n",
  "readmeFilename": "README.md",
  "scripts": {
    "test": "test"
  },
  "version": "1.0.7"
}
