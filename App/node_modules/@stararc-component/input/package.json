{
  "_args": [
    [
      {
        "raw": "@stararc-component/input@1.0.7",
        "scope": "@stararc-component",
        "escapedName": "@stararc-component%2finput",
        "name": "@stararc-component/input",
        "rawSpec": "1.0.7",
        "spec": "1.0.7",
        "type": "version"
      },
      "E:\\phpEvent\\www\\react-redux\\pro.insur\\App"
    ]
  ],
  "_from": "@stararc-component/input@1.0.7",
  "_id": "@stararc-component/input@1.0.7",
  "_inCache": true,
  "_location": "/@stararc-component/input",
  "_nodeVersion": "4.4.3",
  "_npmUser": {},
  "_npmVersion": "4.5.0",
  "_phantomChildren": {
    "babel-code-frame": "6.22.0",
    "big.js": "3.1.3",
    "cssesc": "0.1.0",
    "cssnano": "3.10.0",
    "emojis-list": "2.1.0",
    "fastparse": "1.1.1",
    "json5": "0.5.1",
    "object-assign": "4.1.1",
    "postcss": "5.2.16",
    "postcss-modules-extract-imports": "1.0.1",
    "postcss-modules-local-by-default": "1.1.1",
    "postcss-modules-scope": "1.0.2",
    "postcss-modules-values": "1.2.2",
    "postcss-value-parser": "3.3.0",
    "regenerate": "1.3.2",
    "regjsgen": "0.2.0",
    "regjsparser": "0.1.5",
    "source-list-map": "0.1.8"
  },
  "_requested": {
    "raw": "@stararc-component/input@1.0.7",
    "scope": "@stararc-component",
    "escapedName": "@stararc-component%2finput",
    "name": "@stararc-component/input",
    "rawSpec": "1.0.7",
    "spec": "1.0.7",
    "type": "version"
  },
  "_requiredBy": [
    "#USER",
    "/",
    "/@stararc-component/header",
    "/@stararc-insurance/test"
  ],
  "_resolved": "http://192.168.1.200:4873/@stararc-component%2finput/-/input-1.0.7.tgz",
  "_shasum": "6ef1736212077a7254eb2ae574f0738d519719b3",
  "_shrinkwrap": null,
  "_spec": "@stararc-component/input@1.0.7",
  "_where": "E:\\phpEvent\\www\\react-redux\\pro.insur\\App",
  "author": {
    "name": "liheng"
  },
  "dependencies": {
    "babel-core": "^6.9.0",
    "babel-loader": "^6.4.1",
    "babel-plugin-transform-runtime": "^6.9.0",
    "css-loader": "^0.28.0",
    "react": "^15.4.2",
    "webpack": "^1.13.0"
  },
  "description": "input componnet",
  "devDependencies": {},
  "dist": {
    "shasum": "6ef1736212077a7254eb2ae574f0738d519719b3",
    "tarball": "http://192.168.1.200:4873/@stararc-component%2finput/-/input-1.0.7.tgz"
  },
  "keywords": [
    "input"
  ],
  "license": "ISC",
  "main": "index.js",
  "name": "@stararc-component/input",
  "optionalDependencies": {},
  "readme": "## Input  \r\n> description input输入框\r\n\r\n## code \r\n```\r\nimport React, {Component} from 'react';\r\nimport style from './index.css';\r\n\r\nexport default class Input extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {value: props.defaultValue || ''}\r\n    }\r\n\r\n    render() {\r\n        let {   \r\n                className, \r\n                type, \r\n                placeholder,\r\n                styleCss={},\r\n                maxLength\r\n            } = this.props;\r\n\r\n        className = className ? className : \"input\";\r\n        \r\n        return (\r\n            <input\r\n                ref=\"input\"\r\n                style={styleCss}\r\n                disabled={this.props.disabled}\r\n                className={style[className]}\r\n                readOnly={this.props.readonly}\r\n                value={this.state.value }\r\n                onFocus={ e=> {\r\n                    this.focusHandle(e)\r\n                } }\r\n                onBlur={ e=> {\r\n                    this.blurHandle(e)\r\n                } }\r\n                onChange={ e=> {\r\n                    this.changeHandle(e)\r\n                } }\r\n                onKeyUp={ e=> this.keyPressHandle(e)}\r\n                maxLength={maxLength}\r\n                type={ type }\r\n                placeholder={placeholder}/>\r\n        )\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        if (nextProps.defaultValue!=this.props.defaultValue) {\r\n            this.setState({value: nextProps.defaultValue});\r\n        }\r\n    }\r\n\r\n    focusHandle(e) {\r\n        let {onFocus}  = this.props;\r\n        onFocus && onFocus(e)\r\n    }\r\n\r\n    blurHandle(e) {\r\n        let {onBlur}  = this.props;\r\n        onBlur && onBlur(e)\r\n    }\r\n\r\n    changeHandle(e) {\r\n        let value = e.target.value;\r\n        let {onChange}  = this.props;\r\n        this.setState({value: value}, function () {\r\n            onChange && onChange(e)\r\n        });\r\n    }\r\n\r\n    keyPressHandle(e) {\r\n        let value = e.target.value;\r\n        let {onKeyup} = this.props;\r\n        this.setState({value: value}, function () {\r\n            onKeyup && onKeyup(e)\r\n        });\r\n    }\r\n\r\n    getFocus() {\r\n        this.refs.input.focus();\r\n    }\r\n\r\n    blurFocus() {\r\n        this.refs.input.blur();\r\n    }\r\n\r\n    getValue() {\r\n        return this.state.value;\r\n    }\r\n\r\n} \r\n\r\n\r\n\r\n```\r\n\r\n## param\r\n\r\n```\r\n`styleCss` \t\t\t外部 传入的css样式（按照对象的形式传入key->value）\r\n\r\n`disabled`  \t\t输入框是否可点击\r\n\r\n`readonly`  \t\t输入框是否是只读属性\r\n\r\n`type`  \t    \tinput类型\r\n\r\n`placeholder`  \t\tinput提示语\r\n\r\n`maxLength`         input最大长度\r\n\r\n`onBlur`  \t    \tinput失焦触发事件\r\n\r\n`onFocus`  \t    \tinput获取焦点触发事件\r\n\r\n`onKeyup`  \t\t\tinput在按键弹起的时候触发事件\r\n\r\n`onChange`  \t\tinput在内容发生改变触发事件\r\n\r\n`defaultValue`  \tinput初始化默认值\r\n\r\n```",
  "readmeFilename": "README.md",
  "scripts": {
    "test": "test"
  },
  "version": "1.0.7"
}
