{
  "_args": [
    [
      {
        "raw": "@stararc-component/header",
        "scope": "@stararc-component",
        "escapedName": "@stararc-component%2fheader",
        "name": "@stararc-component/header",
        "rawSpec": "",
        "spec": "latest",
        "type": "tag"
      },
      "E:\\phpEvent\\www\\react-redux\\pro.insur\\App"
    ]
  ],
  "_from": "@stararc-component/header@latest",
  "_id": "@stararc-component/header@1.0.9",
  "_inCache": true,
  "_location": "/@stararc-component/header",
  "_nodeVersion": "4.4.3",
  "_npmUser": {},
  "_npmVersion": "4.5.0",
  "_phantomChildren": {
    "babel-code-frame": "6.22.0",
    "big.js": "3.1.3",
    "chalk": "1.1.3",
    "cssesc": "0.1.0",
    "cssnano": "3.10.0",
    "emojis-list": "2.1.0",
    "fastparse": "1.1.1",
    "json5": "0.5.1",
    "object-assign": "4.1.1",
    "postcss": "5.2.16",
    "postcss-modules-extract-imports": "1.0.1",
    "postcss-modules-local-by-default": "1.1.1",
    "postcss-modules-scope": "1.0.2",
    "postcss-modules-values": "1.2.2",
    "postcss-value-parser": "3.3.0",
    "regenerate": "1.3.2",
    "regjsgen": "0.2.0",
    "regjsparser": "0.1.5",
    "source-list-map": "0.1.8",
    "source-map": "0.5.6",
    "supports-color": "3.2.3"
  },
  "_requested": {
    "raw": "@stararc-component/header",
    "scope": "@stararc-component",
    "escapedName": "@stararc-component%2fheader",
    "name": "@stararc-component/header",
    "rawSpec": "",
    "spec": "latest",
    "type": "tag"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "http://192.168.1.200:4873/@stararc-component%2fheader/-/header-1.0.9.tgz",
  "_shasum": "181d12f15263d95d45168a2a9d964c71457ced7c",
  "_shrinkwrap": null,
  "_spec": "@stararc-component/header",
  "_where": "E:\\phpEvent\\www\\react-redux\\pro.insur\\App",
  "author": {
    "name": "liheng"
  },
  "dependencies": {
    "@stararc-component/button": "^1.0.1",
    "@stararc-component/input": "^1.0.3",
    "@stararc-insurance/help-tools": "^1.0.3",
    "babel-core": "^6.9.0",
    "babel-loader": "^6.4.1",
    "babel-plugin-transform-runtime": "^6.9.0",
    "css-loader": "^0.28.0",
    "react": "^15.4.2",
    "webpack": "^1.13.0"
  },
  "description": "header",
  "devDependencies": {},
  "dist": {
    "shasum": "181d12f15263d95d45168a2a9d964c71457ced7c",
    "tarball": "http://192.168.1.200:4873/@stararc-component%2fheader/-/header-1.0.9.tgz"
  },
  "keywords": [
    "header"
  ],
  "license": "ISC",
  "main": "index.js",
  "name": "@stararc-component/header",
  "optionalDependencies": {},
  "readme": "## Header\r\n>des 目前项目中顶部的通用组件\r\n\r\n```\r\nimport React, {Component} from 'react';\r\nimport {Link} from 'react-router';\r\nimport style from './index.css';\r\nimport commonRequest from '@stararc-insurance/common-request';\r\n\r\nimport {convertCookieToObj} from \"@stararc-insurance/help-tools\";\r\n\r\nconst LOGO = require('./img/logo--small.png');\r\nimport {updatePassword} from './updatePwd';\r\nexport default class Header extends Component {\r\n    render() {\r\n        return (\r\n            <header className={style[\"header\"]}>\r\n                <div className={style[\"header__innerwrap\"]}>\r\n                    <div className={style[\"logo\"]}>\r\n                        <img src={LOGO} alt=\"\"/>\r\n                    </div>\r\n                    <div className={style[\"title__wrap\"]}>\r\n                        {/*<div className={style[\"logo__title\"]}>\r\n                            <div>安全生产大数据分系统</div>\r\n                        </div>*/}\r\n                    </div>\r\n                    <div className={style[\"header__operating\"]}>\r\n                        <UserLoginInfo/>\r\n                        {/*<UserSetUp/>*/}\r\n                        <UserBack/>\r\n                    </div>\r\n                    <div className={style[\"header__right\"]}>\r\n                        {/*<Menu />*/}\r\n                    </div>\r\n                </div>\r\n            </header>\r\n        )\r\n    }\r\n}\r\n\r\n/**\r\n * 用户登录信息展示\r\n */\r\nclass UserLoginInfo extends Component{\r\n    render(){\r\n        let infor = convertCookieToObj();\r\n\r\n        return(\r\n            <div className={style[\"operating__user\"]}>欢迎：{infor.user_name}</div>\r\n        )\r\n    }\r\n}\r\n\r\n/**\r\n * 用户设置\r\n */\r\nclass UserSetUp extends Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state={\r\n            operating:false\r\n        }\r\n    }\r\n    render(){\r\n        return(\r\n            <div className={style[\"operating__setUp\"]} onBlur={e=>this.userSetUpBlur()} tabIndex=\"0\">\r\n                <div>\r\n                    <span className={style[\"setUp\"]} onClick={e=>this.userSetUpClcik()} >\r\n                    </span>\r\n                    {this.state.operating?<Operating closeUserSetUp={e=>this.userSetUpBlur()}/>:''}\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n    userSetUpClcik(){\r\n        let operating=!this.state.operating;\r\n        this.setState({\r\n            operating:operating\r\n        })\r\n    }\r\n    userSetUpBlur(){\r\n        this.setState({\r\n            operating:false\r\n        })\r\n    }\r\n}\r\n\r\nclass Operating extends Component{\r\n    render(){\r\n        return(\r\n            <div className={style[\"operating__content\"]}>\r\n                <span className={style[\"operating_update_pwd\"]} onClick={e=>this.updatePwdClick()}>修改密码</span>\r\n            </div>\r\n        )\r\n    }\r\n    updatePwdClick(){\r\n        let {closeUserSetUp}=this.props;\r\n        closeUserSetUp&&closeUserSetUp();\r\n        updatePassword();\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n/**\r\n * 退回\r\n */\r\nclass UserBack extends Component{\r\n    render(){\r\n        return(\r\n            <div className={style[\"operating__back\"]} onClick={e=>this.login_out()}></div>\r\n        )\r\n    }\r\n    login_out(){\r\n        let {loginOut} = this.props;\r\n\r\n        loginOut && loginOut();\r\n    }\r\n}\r\n\r\n/**\r\n * 一级菜单导航\r\n */\r\nclass Menu extends Component {\r\n    render() {\r\n        let menus = this.getMenu();\r\n        let nav = menus.map(function (m, key) {\r\n            return <Link key={key} to={m.path} className={style[\"menu__text\"]}\r\n                    activeClassName={style[\"menu__text--hover\"]}>{m.name}</Link>;\r\n        })\r\n        return (\r\n            <div className={style[\"menu\"]}>\r\n                {nav}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    getMenu() {\r\n        return [{\r\n            name: '统计',\r\n            path: '/statistic'\r\n        }]\r\n    }    \r\n}\r\n\r\n\r\n###des 子组件\r\nimport React, {Component} from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport style from './updatePwd.css';\r\nimport Input from '@stararc-component/input';\r\nimport Button from '@stararc-component/button';\r\n\r\nexport function updatePassword(defaultObj,callback) {\r\n    let root=document.createElement('div');\r\n    root.id='alertPassword';\r\n    document.body.appendChild(root);\r\n    return ReactDOM.render(<UpdatePwd defaultObj={defaultObj} callback={callback}/>,root);\r\n}\r\n\r\nexport function closePassword() {\r\n    let alertPassword=document.querySelector('#alertPassword');\r\n    if(alertPassword){\r\n        ReactDOM.unmountComponentAtNode(alertPassword);\r\n        alertPassword.parentNode.removeChild(alertPassword);\r\n    }\r\n}\r\n\r\nclass UpdatePwd extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            defaultObj:props.defaultObj,\r\n            passwordEerror:'',\r\n            newPasswordEerror:'',\r\n            newConfirmPasswordEerror:'',\r\n        }\r\n    }\r\n    render(){\r\n        return(\r\n            <div className={style[\"alert__wrap_password\"]}>\r\n                <div className={style[\"alert__bg_password\"]} onClick={e => this.closeAlertPassword(e)}></div>\r\n                <div className={style[\"alert__password\"]}>\r\n                    <div className={style[\"alert_user_update\"]}>\r\n                        <lable className={style[\"alert_user_lable\"]}><span className={style[\"required_mark\"]}>*</span>原始密码：</lable>\r\n                        <div className={style[\"alert_user_input\"]}>\r\n                            <Input ref=\"password\" type={\"password\"} onChange={e=>this.changePassword(e)}/>\r\n                        </div>\r\n                        <span className={style[this.state.passwordEerror]}></span>\r\n                    </div>\r\n                    <div className={style[\"alert_user_update\"]}>\r\n                        <lable className={style[\"alert_user_lable\"]}><span className={style[\"required_mark\"]}>*</span>新密码：</lable>\r\n                        <div className={style[\"alert_user_input\"]}>\r\n                            <Input ref=\"newPassword\" type={\"password\"} onChange={e=>this.changeNewPassword(e)}/>\r\n                        </div>\r\n                        <span className={style[this.state.newPasswordEerror]}></span>\r\n                    </div>\r\n                    <div className={style[\"alert_user_update\"]}>\r\n                        <lable className={style[\"alert_user_lable\"]}><span className={style[\"required_mark\"]}>*</span>确认新密码：</lable>\r\n                        <div className={style[\"alert_user_input\"]}>\r\n                            <Input ref=\"newConfirmPassword\" type={\"password\"} onChange={e=>this.changeNewConfirmPassword(e)}  />\r\n                        </div>\r\n                        <span className={style[this.state.newConfirmPasswordEerror]}></span>\r\n                    </div>\r\n                    <div className={style[\"alert_user_submit\"]}>\r\n                        <Button text={\"提交\"} onClick={e=> this.submitForm(e)}/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n    closeAlertPassword(){\r\n        closePassword&&closePassword();\r\n    }\r\n    getOption(){\r\n        return{\r\n            // user_id:this.state.defaultObj.user_id,\r\n            prepass:this.refs.password.getValue(),\r\n            password:this.refs.newPassword.getValue()\r\n        }\r\n    }\r\n    changePassword(){\r\n        let value=this.refs.password.getValue();\r\n        this.setState({passwordEerror:value&&value.length>=6?'hook':'cross'});\r\n        return value&&value.length>=6?true:false;\r\n    }\r\n    changeNewPassword(){\r\n        let valueConfirm=this.refs.newConfirmPassword.getValue();\r\n        let value=this.refs.newPassword.getValue();\r\n        this.setState({newPasswordEerror:value&&value.length>=6?'hook':'cross'});\r\n        this.setState({newConfirmPasswordEerror:(value==valueConfirm)&&(value&&valueConfirm)?'hook':'cross'});\r\n        return value&&value.length>=6?true:false;\r\n    }\r\n    changeNewConfirmPassword(){\r\n        let newValue=this.refs.newPassword.getValue();\r\n        let value=this.refs.newConfirmPassword.getValue();\r\n        this.setState({newConfirmPasswordEerror:(value&&value==newValue)&&value.length>=6?'hook':'cross'});\r\n        return (value&&value==newValue)&&value.length>=6?true:false;\r\n    }\r\n    submitForm(e){\r\n        let {callback}=this.props,data=this.getOption(),isSubmit=true;\r\n        if(!this.changePassword()){\r\n            isSubmit=false;\r\n        }\r\n        if(!this.changeNewPassword()){\r\n            isSubmit=false;\r\n        }\r\n        if(!this.changeNewConfirmPassword()){\r\n            isSubmit=false;\r\n        }\r\n        if(!isSubmit){\r\n            return;\r\n        }\r\n        // callback(data);\r\n    }\r\n}\r\n```\r\n",
  "readmeFilename": "README.md",
  "scripts": {
    "test": "test"
  },
  "version": "1.0.9"
}
