'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.GoBackButton = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _index = require('./index.css');

var _index2 = _interopRequireDefault(_index);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/**
 * 通用button
 * className
 * blue 深蓝
 * blue-light 浅蓝
 * danger 橙色
 */
var Button = function (_Component) {
	_inherits(Button, _Component);

	function Button() {
		_classCallCheck(this, Button);

		return _possibleConstructorReturn(this, (Button.__proto__ || Object.getPrototypeOf(Button)).apply(this, arguments));
	}

	_createClass(Button, [{
		key: 'render',
		value: function render() {
			var _props = this.props;
			var _props$type = _props.type;
			var type = _props$type === undefined ? "button" : _props$type;
			var _props$className = _props.className;
			var className = _props$className === undefined ? "blue" : _props$className;
			var _props$styleCss = _props.styleCss;
			var styleCss = _props$styleCss === undefined ? {} : _props$styleCss;


			return _react2.default.createElement(
				'button',
				{
					style: styleCss,
					className: _index2.default[className],
					type: type,
					onClick: this.props.onClick,
					disabled: this.props.disabled },
				this.props.text
			);
		}
	}]);

	return Button;
}(_react.Component);

/**
 * 返回按钮
 */


exports.default = Button;

var GoBackButton = exports.GoBackButton = function (_Component2) {
	_inherits(GoBackButton, _Component2);

	function GoBackButton() {
		_classCallCheck(this, GoBackButton);

		return _possibleConstructorReturn(this, (GoBackButton.__proto__ || Object.getPrototypeOf(GoBackButton)).apply(this, arguments));
	}

	_createClass(GoBackButton, [{
		key: 'render',
		value: function render() {
			var _this3 = this;

			return _react2.default.createElement(Button, { className: 'danger', text: '\u8FD4\u56DE', onClick: function onClick(e) {
					return _this3.clickHandle();
				} });
		}
	}, {
		key: 'clickHandle',
		value: function clickHandle() {
			history.go(-1);
		}
	}]);

	return GoBackButton;
}(_react.Component);
