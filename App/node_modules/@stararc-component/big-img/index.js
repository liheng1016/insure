'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

exports.default = BigImg;

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _reactDom = require('react-dom');

var _reactDom2 = _interopRequireDefault(_reactDom);

var _BigImg = require('./BigImg.css');

var _BigImg2 = _interopRequireDefault(_BigImg);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/**
 * create by liheng at 2016.12.12
 * <BigImg />
 * imgArr=[{
 *      path:"",
        id:""
    }]
 * 弹框播放图片资源
 */
var BigImg = function (_Component) {
    _inherits(BigImg, _Component);

    function BigImg(props) {
        _classCallCheck(this, BigImg);

        var _this = _possibleConstructorReturn(this, (BigImg.__proto__ || Object.getPrototypeOf(BigImg)).call(this, props));

        _this.state = {
            imgArr: props.imgArr || [],
            currentIndex: props.currentIndex || 0
        };
        return _this;
    }

    _createClass(BigImg, [{
        key: 'render',
        value: function render() {
            var _this2 = this;

            var currentPath = this.state.imgArr[this.state.currentIndex]['path'];

            return _react2.default.createElement(
                'div',
                { className: _BigImg2.default["bigimg__box"], ref: 'bigimg' },
                _react2.default.createElement('div', { className: _BigImg2.default["bigimg__shade"], onClick: function onClick(e) {
                        return _this2.unMount();
                    } }),
                _react2.default.createElement(
                    'div',
                    { className: _BigImg2.default["bigimg__content"] },
                    _react2.default.createElement('img', { src: currentPath, alt: '', className: _BigImg2.default['show__img'] }),
                    _react2.default.createElement('span', { className: _BigImg2.default["pre__img"], onClick: function onClick(e) {
                            return _this2.setCurrentImg('pre');
                        } }),
                    _react2.default.createElement('span', { className: _BigImg2.default["next__img"], onClick: function onClick(e) {
                            return _this2.setCurrentImg('next');
                        } })
                )
            );
        }
    }, {
        key: 'setCurrentImg',
        value: function setCurrentImg(type) {
            var _state = this.state;
            var currentIndex = _state.currentIndex;
            var _state$imgArr = _state.imgArr;
            var imgArr = _state$imgArr === undefined ? [] : _state$imgArr;

            var maxLen = imgArr.length,
                index = '';

            switch (type) {
                case 'pre':
                    index = currentIndex - 1 < 0 ? currentIndex : currentIndex - 1;
                    break;
                case 'next':
                    index = currentIndex + 1 == maxLen ? currentIndex : currentIndex + 1;
                    break;
                default:
                    break;
            }

            this.setState({
                currentIndex: index
            });
        }
    }, {
        key: 'unMount',
        value: function unMount() {
            var mountNode = _reactDom2.default.findDOMNode(this.refs.bigimg);

            mountNode.parentNode.removeChild(mountNode);
        }
    }]);

    return BigImg;
}(_react.Component);

function BigImg() {
    var imgArr = arguments.length <= 0 || arguments[0] === undefined ? [] : arguments[0];
    var index = arguments.length <= 1 || arguments[1] === undefined ? 0 : arguments[1];

    var imgRoot = document.createElement('div');
    document.body.appendChild(imgRoot);

    _reactDom2.default.render(_react2.default.createElement(BigImg, { imgArr: imgArr, currentIndex: index }), imgRoot);
}

